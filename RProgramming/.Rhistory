swirl()
library(swirl)
swirl()
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind (patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
INTS
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
add2 <- function(x,y)) {
x + y
}
add2 <- function(x,y) {
x + y
}
add2(3,5)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
make.power<-function(n) {}
make.power<-function(n) { }
make.power<-function(n) { }
make.power<-function(n) {
pow<-funtion(x) {
make.power<-function(n) {
pow<-function(x) {
x^n
}
pow
}
make.power(5)
pow(5)
cube<-make.power(3)
square<-make.power(2)
cube(3)
square(3)
y<-10
f<-function(x) {
y<-2
y^2+g(x)
}
g<-function(x) {
x*y
}
f(3)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <-function(x) {
x*y
}
f(3)
wd()
getwd()
?chagewd
?changewd
?changedir
?change
changedir(C:/Users/mrmrsmcqueen/Coursera/R Programming)
setwd(C:/Users/mrmrsmcqueen/Coursera)
setwd(C:Users/mrmrsmcqueen/Coursera)
getwd()
setwd("C:Users/mrmrsmcqueen/Coursera")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
install.packages("RCurl")
install.packages("RCurl")
getwd()
setwd("C:/Users/mrmrsmcqueen/datasciencecoursera/R Programming")
getwd()
